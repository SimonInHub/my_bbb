{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mut",
				"mutex_poweroff"
			],
			[
				"os_mut",
				"os_mutex_get"
			],
			[
				"SUCCES",
				"WM_SUCCESS"
			],
			[
				"ser",
				"serial_d"
			],
			[
				"msg",
				"msg_from_cloud"
			],
			[
				"state",
				"state_code"
			],
			[
				"uti",
				"util_dump_hex	(main_extension.c)"
			],
			[
				"msf",
				"msg_from_cloud"
			],
			[
				"msgfr",
				"msg_from_cloud"
			],
			[
				"ihealth_xxtea",
				"ihealth_xxtea_crypt.h	(ihealth_xxtea_crypt.c)"
			],
			[
				"ms",
				"msg_to_cloud.cmd"
			],
			[
				"util",
				"util_dump_hex"
			],
			[
				"gid",
				"g_StIdps"
			],
			[
				"g",
				"g_StIdps"
			],
			[
				"Acc",
				"Accessory_SerialNO"
			],
			[
				"stor",
				"store_device_info"
			],
			[
				"Ac",
				"Accessory_SerialNO"
			],
			[
				"device",
				"device_info_t"
			],
			[
				"ihea",
				"ihealth_appfw_update.h	(ihealth_appfw_update.c)"
			],
			[
				"ihea_upda",
				"ihealth_appfw_update.h	(ihealth_appfw_update.c)"
			],
			[
				"cmd",
				"cmd"
			],
			[
				"uint",
				"uint32_t"
			],
			[
				"iheamcuup",
				"ihealth_mcufw_update.h	(ihealth_mcufw_update.c)"
			],
			[
				"ihealmcuup",
				"ihealth_mcufw_update.h	(ihealth_mcufw_update.c)"
			],
			[
				"iheathmcuup",
				"ihealth_mcufw_update.h	(ihealth_mcufw_update.c)"
			],
			[
				"ostik",
				"os_msec_to_ticks(1000	(ihealth_mcufw_update.c)"
			],
			[
				"g_st",
				"g_StDevInfo"
			],
			[
				"psm",
				"psm_val"
			],
			[
				"orig",
				"origin_key"
			],
			[
				"type",
				"typedef	(main_extension.h)"
			],
			[
				"encpr",
				"encrypt.h	(main.c)"
			],
			[
				"out",
				"outlen_p"
			],
			[
				"mem",
				"memcpy	(main_extension.c)"
			],
			[
				"Accer",
				"Accessory_FwVer"
			],
			[
				"ty",
				"typedef"
			],
			[
				"size",
				"sizeof"
			],
			[
				"main",
				"main_extension.h	(main.c)"
			],
			[
				"app",
				"application	(main.c)"
			],
			[
				"LO",
				"LOG_ERROR"
			],
			[
				"devi",
				"device_serial_dev"
			],
			[
				"iheal",
				"ihealthlabs_server_cert	(ihealthlabs-server.cert.pem.c)"
			],
			[
				"flash",
				"flashprog"
			],
			[
				"src",
				"src"
			],
			[
				"mw3",
				"mw300_rd	(Makefile)"
			],
			[
				"stat",
				"status"
			],
			[
				"User",
				"UserName"
			],
			[
				"otp",
				"otpval"
			],
			[
				"res",
				"resp"
			],
			[
				"enter",
				"entered"
			],
			[
				"b_fl",
				"b_flag_fwupdate=2"
			],
			[
				"b_f",
				"b_flag_fwupdate==1	(ihealth_bp.c)"
			],
			[
				"conn",
				"connected	(smt_test.c)"
			],
			[
				"chec",
				"checksum"
			],
			[
				"image",
				"image_tmp"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"ena",
				"enable_websocket"
			],
			[
				"prot",
				"protocol"
			],
			[
				"bod",
				"bodyParser"
			],
			[
				"ful",
				"full_name"
			],
			[
				"connect",
				"connected"
			],
			[
				"wm",
				"WM_FAIL"
			],
			[
				"unit",
				"uint32_t"
			],
			[
				"err",
				"err_exit"
			],
			[
				"WM",
				"WM_SUCCESS"
			],
			[
				"L",
				"LOG_INFO"
			],
			[
				"block",
				"block_no"
			],
			[
				"Log",
				"LOG_DEBUG	(third_party_mcu_ota.c)"
			],
			[
				"bloc",
				"block_no"
			],
			[
				"fir",
				"firmware_size"
			],
			[
				"temp",
				"temp_data"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"ihel",
				"ihealth_mcufw_updatequery"
			],
			[
				"ISTAT",
				"IMFWUD_STATE_WAITCMD"
			],
			[
				"IMFWUD_STATE_",
				"IMFWUD_STATE_QUERY"
			],
			[
				"IMFWSTAT",
				"IMFWUD_STATE_WAITCMD"
			],
			[
				"IMFWST",
				"IMFWUD_STATE_WAITCMD"
			],
			[
				"IMFWUD",
				"IMFWUD_EVT_FIND_VALIDFW"
			],
			[
				"IMFW",
				"IMFWUD_EVT_INIT_DONE"
			],
			[
				"IMF",
				"IMFWUD_EVT_REFUSE_UPDATE"
			],
			[
				"IMFWE",
				"IMFWUD_EVT_ALLOWED_UPDATE"
			],
			[
				"Lo",
				"LOG_ERROR"
			],
			[
				"ihealeven",
				"ihealth_mcufw_update_event_handler"
			],
			[
				"recv",
				"recvcmd_buf"
			],
			[
				"xque",
				"xQueueSendToBack	(ihealth_bp.c)"
			],
			[
				"x",
				"xQueueCreate	(main.c)"
			],
			[
				"ihe",
				"ihealth_mcufw_updateinit"
			],
			[
				"while",
				"while(1	(ihealth_mcu_cmd.c)"
			],
			[
				"PO",
				"USE_POWER_TEST"
			],
			[
				"is",
				"is_smttest_mode_enable	(smt_test.c)"
			],
			[
				"log",
				"LOG_INFO"
			],
			[
				"rec",
				"recvcmd_buf"
			],
			[
				"ret",
				"return"
			],
			[
				"MAX",
				"MAX_REQUEST_APINFO_TIMES"
			],
			[
				"SMT",
				"SMT_NETWORK_PROVISIONED"
			],
			[
				"smt_net",
				"smttest_network_get_nw_state"
			],
			[
				"reboot",
				"pm_reboot_soc"
			],
			[
				"os_timer",
				"os_timer_arg_t"
			],
			[
				"g_test",
				"g_smttest_doing_timer"
			],
			[
				"SMTTEST_DO",
				"SMTTEST_STATE_DOING_TEST"
			],
			[
				"smt",
				"smttest"
			],
			[
				"ch",
				"channel"
			],
			[
				"cmd_smt",
				"cmd_smttest_mode_enable"
			],
			[
				"test",
				"test_time"
			],
			[
				"FA",
				"faild_times"
			],
			[
				"cmd_smt_test",
				"cmd_smt_testap_set"
			],
			[
				"re",
				"replace"
			],
			[
				"con",
				"connect_time"
			],
			[
				"dum",
				"dump_hex_info"
			],
			[
				"inc",
				"include"
			],
			[
				"fac",
				"factory_net"
			],
			[
				"miio",
				"miio_app"
			],
			[
				"req",
				"req_json"
			],
			[
				"tes",
				"testlist"
			],
			[
				"ap",
				"application"
			],
			[
				"USE",
				"USE_POWER_TEST"
			],
			[
				"GPIO_Pin",
				"GPIO_Pin_10"
			],
			[
				"GPIO",
				"GPIOC"
			],
			[
				"joi",
				"joinap_time"
			],
			[
				"jo",
				"joinap_time"
			],
			[
				"line",
				"line_ok"
			],
			[
				"tst",
				"test_time"
			],
			[
				"opt",
				"optimization"
			],
			[
				"USA",
				"USART1"
			],
			[
				"ipadd",
				"ipaddr_str"
			],
			[
				"SAN_D",
				"SAND_DBG"
			],
			[
				"LOF",
				"LOG_INFO"
			],
			[
				"conf",
				"configfile"
			],
			[
				"Bu",
				"BUILDOS"
			]
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 39,
				"line_ending": "Unix"
			}
		},
		{
			"file": "udp_server.py",
			"settings":
			{
				"buffer_size": 522,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 92.0,
		"last_filter": "gitpush",
		"selected_items":
		[
			[
				"gitpush",
				"Git: Push Current Branch"
			],
			[
				"git commi",
				"Git: Commit"
			],
			[
				"git diff",
				"Git: Diff All Files"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git remor",
				"Git: Track Remote Branch"
			],
			[
				"gitcomm",
				"Git: Commit"
			],
			[
				"bpm1",
				"Build With: bpm1_ae"
			],
			[
				"git",
				"Git: Add All"
			],
			[
				"gits",
				"Git: Status"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"hex",
				"Hex Viewer: Set Bytes Per Line"
			],
			[
				"hx",
				"Hex Viewer: Toggle Hex View"
			],
			[
				"pi",
				"Package Control: Install Package"
			],
			[
				"gitstatus",
				"Git: Status"
			],
			[
				"ma",
				"Markdown Slideshow"
			],
			[
				"mar",
				"Markdown Slideshow"
			],
			[
				"python",
				"Build With: python3"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"make ",
				"Build With: Make"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Channel"
			],
			[
				"m",
				"Markdown Slideshow"
			],
			[
				"mark",
				"Markdown Slideshow"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/simon/Documents/projects_with_git/bb-black/my_bbb"
	],
	"file_history":
	[
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/wifi_framework_callback.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_cloud_handler.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_serial_handler.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_serial_handler.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/wlan/wm_demo/src/main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/middleware/sysinfo/sysinfo.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/wlan/wifidriver/incl/mlan_main.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/wlan/wifidriver/mlan_sta_ioctl.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/wlan/wifidriver/mlan_wmsdk.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/drivers/wlan/wifi-decl.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/wlan_11d.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/perf_demo/src/main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/test_apps/qa1/src/main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/test_apps/io_demo/uart/uart_test/src/uart.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/test_apps/io_demo/uart/uart_test/src/main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/drivers/wlan/wifi.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/power_mgr_helper.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/main_extension.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_appfw_update.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/main_extension.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_cloud_handler.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/README",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/README",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/device_serial_handler.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/config.mk",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/build.mk",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/utility.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/os_api_demo/mutex_demo/src/mutex_demo.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae_test/Serial_GUI/bpm1_test/bpm1_test.py",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/platform/os/freertos/wm_os.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/os_api_demo/mutex_demo/src/main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/core/pwrmgr/pwrmgr.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/platform/os/freertos/os.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/core/pwrmgr/wakelock_debug.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/prov_udp.h",
		"/home/simon/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_mcufw_update.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/app_framework/app_network_mgr.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_smt_test.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/Makefile",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/incl/appln_dbg.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/app_framework/app_ctrl.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src_lib/appln_dbg.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/core/wmtime/wmtime.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src_lib/arch_os.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/external/freertos/FreeRTOSConfig.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/external/freertos/Source/include/FreeRTOS.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/external/freertos/Source/tasks.c",
		"/home/simon/Documents/projects_with_git/bb-black/my_projects/exploringbeaglebone/exploringBB/chp06/GPIO/GPIO.cpp",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/.gitignore",
		"/home/simon/Documents/projects_with_git/bb-black/my_bbb/smbclient-demo.py",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/bin/mw300_defconfig/objs/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/main_extension.d",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_xxtea_crypt.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_xxtea_crypt.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/led_indications.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/wmlog.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_smt_test.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/bpm1_ae.sublime-build",
		"/home/simon/.config/sublime-text-3/Packages/User/bpm1_ae.sublime-build",
		"/home/simon/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/tools/bin/heap_analyse.pl",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/tools/bin/perm_fix.sh",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/tools/bin/flash_pack.py",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/tools/host-tools/uartboot/README",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/psm.conf",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/wlan.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/tools/bin/gen_wififw.py",
		"/home/simon/Documents/projects_with_git/my_pyprojects/pystks/stk1/stk1.py",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/README",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/doxy/README",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/ihealth_appfw_update.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/core/cli/cli_utils.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/core/util/base64.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/libc/string.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/wlan/wlcmgr/wlan.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/libc/stdio.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/middleware/psm/psm-legacy.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/middleware/psm/psm-v2.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/wmerrno.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/encrypt.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/core/wmtime/wmtime_cli.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/middleware/psm/psm-utils.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/wmlist.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/fw_upgrade.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/incl/lib/lib_generic.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/middleware/rfget/rfget.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/psm-v2.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/app_framework/app_psm.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/.ihealth_cloud_handler.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/bin/mw300_defconfig/autoconf.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/app_framework/app_sys_http_handlers.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/drivers/boot_flags.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/drivers/mw300/lowlevel/mw300_pmu.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/drivers/mw300/regs/pmu_reg.h",
		"/home/simon/.config/sublime-text-3/Packages/Git/Git.sublime-settings",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/libc/src/snprintf.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/incl/misc/led_indicator.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/io_demo/gpio/src/main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/printbininfo.py",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/boards/xiaomi_dev.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/drivers/peripherals/led_indicator/led_indicator.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/boards/bpm1-ae.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1/xiaomi_layout.txt",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/module_demo/psm_demo/src/main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/psm.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/middleware/httpc/httpc.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/httpc.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/middleware/wps/wfd_main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/middleware/wps/wps_wlan.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sample_apps/wlan/wlan_cal/src/main.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/core/util/dumphex.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/core/util/hexbin.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/encrypt.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1/miio_app/miio_common/Source/util/dump_hex_info.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1/Makefile",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1/miio_app/miio_common/Source/include/util/dump_hex_info.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src_lib/jsmn/jsmn.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/libc/stdint.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/app_framework/app_network_config.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/app_framework/app_psm.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/wlan/wifidriver/incl/mlan_ioctl.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src/device_serial_handler.c",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/json_parser.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/incl/led_indications.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/sdk/src/incl/sdk/cli.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/incl/main_extension.h",
		"/home/simon/Documents/projects_with_git/ihealth_bpm/bpm1_ae/ihealth_app/src_lib/main_extension.c"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			"",
			"/home/simon/Documents/miio_sdk_1.2.6-97_ys/miio_app",
			"/home/simon/Documents/miio_sdk_1.2.6-97_ys/miio_app,-*.txt,",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"MAX_RETRY_TICKS",
			"APPCONFIG_XIP_ENABLE",
			"memdump",
			"wlan_set_country",
			"wifi_set_packet_retry_count",
			"MAX",
			"retry",
			"MAX",
			"init_done",
			"wlan-set",
			"wlan_set_region_code",
			"wifi_set_region_code",
			"pm_cb_handle",
			"cld_is_online",
			"ihealth_cloud_online_stat",
			"ihealth_cloud_is_online",
			"CldOffline",
			"ihealth_cloud_is_online",
			"send_wifi_state2mcu",
			"q_wf_stat",
			"CldOnline",
			"wf_stat.cld_stat",
			"CldOnline",
			"cld_is_online",
			"ihealth_cloud_online_stat",
			"\\r",
			"poweroff",
			"CMDID_POWERDOWN",
			"process_msg_from_mcu",
			"ControlCmdProcess",
			"mutex_poweroff",
			"power",
			"mutex_poweroff",
			"q_msg_from_cloud",
			"os_mutex_t",
			"mutex",
			"cmd_idps_test",
			"idps",
			"memdump",
			"LOG_ERROR",
			"LOG_DEBUG",
			"NW_STATE_CONNECTED",
			"State Change",
			"app_ctrl",
			"network_mgr: network loaded successfully",
			"mcu fw header not found, skip restoring",
			"cmd_smttest_mode_enable_flag",
			"C0 00 04",
			"ent",
			"iH_Success",
			"SEND_MSG_MAX_WAIT_TIME",
			"msg_to_serial",
			"post_data_process",
			"msg_to_ser",
			"q_msg_from_cloud",
			"qp_msg_from_cloud",
			"msg_from_cloud",
			"msg_from_serial",
			"post_data_process",
			"msg_from_ser",
			"q_msg_from_cloud",
			"msg_to_serial",
			"util_dump_hex",
			"CMD",
			"\\r\\n",
			"}\n",
			"cmd_smttest_mode_enable_flag",
			"PackMcuCmd",
			"process_msg_from_cloud",
			"encrypt.h",
			"wmprintf",
			"No need to update Protocol_String",
			"wfcb_b",
			"Error",
			"error",
			"ERROR",
			"dbg",
			"LOG_ERROR",
			"LOG_INFO",
			"wmprintf",
			"print_role",
			"wmprintf",
			"dbg",
			"LOG_ERROR",
			"dbg",
			"wmprintf",
			" must use make tools.instal first",
			"font",
			"\\n\\r",
			"msg_to_cloud",
			"CMD",
			"\\r\\n",
			"\\n\\r",
			" check uart buffer",
			"success",
			"error_handler",
			"device_serial_rx_handler",
			"device_serial_read",
			"device_serial_rx_handler_thread",
			"serial_read_thread_stack",
			"LOG_ERROR",
			"dbg",
			"$(reg)",
			"heap",
			"wmprintf",
			"wmprinf",
			"LOG_INFO",
			"q_wf_stat",
			"wfstat_queue_data",
			"g_iseqnum",
			"CldOnline",
			"SessionPowerUpNotify",
			"PowerUpNotify",
			"store_device_info",
			"store_base64_devinfo_item",
			"store_device_info",
			"store_base64_devinfo_item",
			"g_StDevInfo",
			"fetch_device_info",
			"pack_encypt_devinfo_item",
			"Origin",
			"pack_decypt_devinfo_item",
			"fetch_device_info",
			"store_device_info",
			"store_base64_devinfo_item",
			"g_StInitDevInfo",
			"util_dump_hex",
			"pack_encypt_devinfo_item"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"cld_is_online",
			"ihealth_cloud_is_online()",
			"powerdown",
			"main_ext_e",
			"main_ext_d",
			"",
			"main_ext_d",
			"wfcb_d",
			"wfcb_b",
			"wfcb_e",
			"wfcb_d",
			"smt_test_d",
			"smt_test_e",
			"smt_test_d",
			"smt_test_e",
			"smt_test_d",
			"smt_test_e",
			"smt_test_d",
			"smt_test_e",
			"smt_test_d",
			"smt_test_e",
			"main_e",
			"main_d",
			"main_e",
			"main_d",
			"main_e",
			"main_d",
			"\\r\\n",
			"",
			"serial_e",
			"serial_d",
			"dbg",
			"word",
			"\\n\\r",
			",0x",
			"0x,",
			",",
			"    ",
			"smt_psm_hnd",
			"CONTINUOUS_TEST",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"origin_encoding": "ASCII",
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Markdown Extended/Syntaxes/Markdown Extended.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "udp_server.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 522,
						"regions":
						{
						},
						"selection":
						[
							[
								279,
								279
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"origin_encoding": "ASCII",
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 428.0
	},
	"output.find_results":
	{
		"height": 479.0
	},
	"output.git":
	{
		"height": 303.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 268.0
	},
	"output.mde":
	{
		"height": 154.0
	},
	"output.unsaved_changes":
	{
		"height": 173.0
	},
	"pinned_build_system": "Packages/User/python3.sublime-build",
	"project": "my_bbb.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wifi",
				"ihealth_app/src/wifi_framework_callback.c"
			],
			[
				"ihehand.h",
				"ihealth_app/src/ihealth_serial_handler.h"
			],
			[
				"wfcb",
				"ihealth_app/src/wifi_framework_callback.c"
			],
			[
				"clou.h",
				"ihealth_app/src/ihealth_cloud_handler.h"
			],
			[
				"wlan.h",
				"sdk/src/incl/sdk/wlan.h"
			],
			[
				"callba",
				"ihealth_app/src/wifi_framework_callback.c"
			],
			[
				"main.c",
				"ihealth_app/src/main.c"
			],
			[
				"iheaser.h",
				"ihealth_app/src/ihealth_serial_handler.h"
			],
			[
				"serial.h",
				"ihealth_app/src/ihealth_serial_handler.h"
			],
			[
				"ser",
				"ihealth_app/src/ihealth_serial_handler.c"
			],
			[
				"psmv2.",
				"sdk/src/incl/sdk/psm-v2.h"
			],
			[
				"wific",
				"ihealth_app/src/wifi_framework_callback.c"
			],
			[
				"serhand",
				"ihealth_app/src/ihealth_serial_handler.h"
			],
			[
				"serialhd",
				"ihealth_app/src/ihealth_serial_handler.c"
			],
			[
				"ihealser",
				"ihealth_app/src/ihealth_serial_handler.h"
			],
			[
				"mainex",
				"ihealth_app/src/main_extension.c"
			],
			[
				"callb",
				"ihealth_app/src/wifi_framework_callback.c"
			],
			[
				"callback",
				"ihealth_app/src/wifi_framework_callback.c"
			],
			[
				"cloud.h",
				"ihealth_app/src/ihealth_cloud_handler.h"
			],
			[
				"serialh.h",
				"ihealth_app/src/ihealth_serial_handler.h"
			],
			[
				"ihe",
				"ihealth_app/src/ihealth_serial_handler.h"
			],
			[
				"mainext",
				"ihealth_app/src/main_extension.c"
			],
			[
				"xiao",
				"xiaomi_layout.txt"
			],
			[
				"layout",
				"sdk/tools/OpenOCD/mw300/layout.txt"
			],
			[
				"wificl",
				"ihealth_app/src/wifi_framework_callback.c"
			],
			[
				"psm",
				"sdk/src/incl/sdk/psm-v2.h"
			],
			[
				"httpc.c",
				"sdk/src/middleware/httpc/httpc.c"
			],
			[
				"en",
				"ihealth_app/src/encrypt.c"
			],
			[
				"dumphex.h",
				"miio_app/miio_common/Source/include/util/dump_hex_info.h"
			],
			[
				"dumphexinfo",
				"miio_app/miio_common/Source/util/dump_hex_info.c"
			],
			[
				"base",
				"sdk/src/core/util/base64.c"
			],
			[
				"jsmn",
				"ihealth_app/src_lib/jsmn/jsmn.c"
			],
			[
				"iheacl",
				"ihealth_app/src/ihealth_cloud_handler.c"
			],
			[
				"psm-v2.c",
				"sdk/src/middleware/psm/psm-v2.c"
			],
			[
				"psm-v2",
				"sdk/src/incl/sdk/psm-v2.h"
			],
			[
				"cloudl.c",
				"ihealth_app/src/ihealth_cloud_handler.c"
			],
			[
				"iheal",
				"ihealth_app/src/ihealth_serial_handler.c"
			],
			[
				"ihealcloud",
				"ihealth_app/src/ihealth_cloud_handler.h"
			],
			[
				"cloud",
				"ihealth_app/src/ihealth_cloud_handler.c"
			],
			[
				"cli",
				"sdk/src/incl/sdk/cli.h"
			],
			[
				"smttest",
				"ihealth_app/src/ihealth_smt_test.c"
			],
			[
				"psmv2",
				"sdk/src/incl/sdk/psm-v2.h"
			],
			[
				"ihealth",
				"miio_app/miio_common/Source/include/ihealth_bp.h"
			],
			[
				"aplndbg.c",
				"bpm1_ae/my_app/src_lib/appln_dbg.c"
			],
			[
				"laout.",
				"bpm1_ae/sdk/tools/OpenOCD/mw300/layout.txt"
			],
			[
				"lay",
				"bpm1_ae/sdk/tools/OpenOCD/aw-cu302/layout.txt"
			],
			[
				"app_c",
				"bpm1_ae/sdk/src/app_framework/app_ctrl.c"
			],
			[
				"app_cr",
				"bpm1_ae/sdk/src/app_framework/app_ctrl.c"
			],
			[
				"httc_ser",
				"sample_apps/module_demo/httpc_demo/src/httpc_secure_get.c"
			],
			[
				"wmos.h",
				"sdk/src/incl/platform/os/freertos/wm_os.h"
			],
			[
				"wmcloud.h",
				"my_app/incl/wmcloud.h"
			],
			[
				"wm_os.",
				"sdk/src/incl/platform/os/freertos/wm_os.h"
			],
			[
				"wm_os",
				"sdk/src/incl/platform/os/freertos/wm_os.h"
			],
			[
				"led",
				"sdk/src/drivers/peripherals/led_indicator/led_indicator.c"
			],
			[
				"led_idicat",
				"sample_apps/wlan/wm_demo/src/led_indications.c"
			],
			[
				"arch_io.c",
				"miio_app/miio_common/Source/src_lib/arch_io.c"
			],
			[
				"arch_io.h",
				"miio_app/miio_common/Source/include/lib/arch_io.h"
			],
			[
				"applin_d",
				"miio_app/miio_common/Source/include/appln_dbg.h"
			],
			[
				"miio",
				"miio_app/miio_common/Source/device_app/miIO_app_ihealth_bp_bpm1.c"
			],
			[
				"board",
				"sdk/src/boards/mw300_rd.c"
			],
			[
				"wmtime.h",
				"sdk/src/incl/sdk/wmtime.h"
			],
			[
				"",
				"miio_app/miio_common/Source/device_app/ihealth_bp.c"
			],
			[
				"app_ctr.h",
				"wmsdk/src/app_framework/app_ctrl.h"
			],
			[
				"app_fram",
				"bin/wmsdk/incl/sdk/app_framework.h"
			],
			[
				"httpc.h",
				"bin/wmsdk/incl/sdk/httpc.h"
			],
			[
				"compat_time.h",
				"sdk/src/incl/libc/GCC/compat_time.h"
			],
			[
				"xmlp",
				"sdk/external/expat-2.1.0/lib/xmlparse.c"
			],
			[
				"pmxiaomi",
				"sample_apps/power_measure_demo/pm_xiaomi_demo/src/pm_xiaomi_demo.c"
			],
			[
				"evrythng.h",
				"sdk/external/evrythng/lib/core/evrythng/include/evrythng/evrythng.h"
			],
			[
				"aws_iot_mqtt_interface.h",
				"sdk/external/aws_iot/aws_iot_src/protocol/mqtt/aws_iot_mqtt_interface.h"
			],
			[
				"mdev_pm.h",
				"sdk/src/incl/sdk/drivers/mdev_pm.h"
			],
			[
				"xmlpr",
				"sdk/external/expat-2.1.0/lib/xmlparse.c"
			],
			[
				"appfre",
				"sdk/src/incl/sdk/app_framework.h"
			],
			[
				"ping",
				"sdk/src/middleware/nw_utils/ping.c"
			],
			[
				"app.h",
				"sample_apps/power_measure_demo/pm_mcu_wifi_demo/src/app.h"
			],
			[
				".pem",
				"sample_apps/test_apps/tls_demo/www/wikipedia-cert.pem"
			],
			[
				"devpm",
				"sdk/src/incl/sdk/drivers/mdev_pm.h"
			],
			[
				"layout.txt",
				"sdk/tools/OpenOCD/mw300/layout.txt"
			],
			[
				"pwrmgr",
				"sdk/src/incl/sdk/pwrmgr.h"
			],
			[
				"pwrmgr.h",
				"sdk/src/incl/sdk/pwrmgr.h"
			],
			[
				"cli.h",
				"sdk/src/incl/sdk/cli.h"
			],
			[
				"cli.c",
				"sdk/src/core/cli/cli.c"
			],
			[
				"cmd.h",
				"miio_app/miio_common/Source/include/ihealth_mcu_cmd.h"
			],
			[
				"ihealbp.h",
				"miio_app/miio_common/Source/include/ihealth_bp.h"
			],
			[
				"iheabp.c",
				"miio_app/miio_common/Source/device_app/ihealth_bp.c"
			],
			[
				"ota.h",
				"miio_app/miio_common/Source/include/lib/ota.h"
			],
			[
				"ota.c",
				"miio_app/miio_common/Source/src_lib/ota.c"
			],
			[
				"ota",
				"miio_app/miio_common/Source/src_lib/ota.c"
			],
			[
				"wlantest",
				"wmsdk/src/wlan/wlcmgr/wlan_tests.c"
			],
			[
				"smttest.c",
				"miio_app/miio_common/Source/device_app/smt_test.c"
			],
			[
				"beagle",
				"build_dir/target-mipsel_24kec+dsp_musl-1.1.14/linux-ramips_rt305x/linux-4.4.6/arch/arm/boot/dts/omap3-beagle.dts"
			],
			[
				"rt5350",
				"target/linux/ramips/dts/rt5350.dtsi"
			],
			[
				"rt535",
				"target/linux/ramips/dts/rt5350.dtsi"
			],
			[
				"smt",
				"miio_app/miio_common/Source/include/smt_test.h"
			],
			[
				"smttest.h",
				"miio_app/miio_common/Source/include/smt_test.h"
			],
			[
				"ihealth_bp",
				"miio_app/miio_common/Source/include/ihealth_bp.h"
			],
			[
				"smtte",
				"miio_app/miio_common/Source/device_app/smt_test.c"
			],
			[
				"ihea",
				"miio_app/miio_common/Source/device_app/ihealth_bp.c"
			],
			[
				"wif",
				"miio_app/miio_common/Source/src_lib/wifi_framework_callback.c"
			],
			[
				"ihelupda",
				"miio_app/miio_common/Source/device_app/ihealth_mcufw_update.c"
			],
			[
				"otc",
				"miio_app/miio_common/Source/src_lib/ota.c"
			],
			[
				"ihelabp.c",
				"miio_app/miio_common/Source/device_app/ihealth_bp.c"
			],
			[
				"call",
				"miio_app/miio_common/Source/src_lib/wifi_framework_callback.c"
			],
			[
				"miioih",
				"miio_app/miio_common/Source/device_app/miIO_app_ihealth_bp_bpm1.c"
			],
			[
				"callback.c",
				"miio_app/miio_common/Source/src_lib/wifi_framework_callback.c"
			],
			[
				"appframe",
				"miio_app/miio_common/Source/src_lib/wifi_framework_callback.c"
			],
			[
				"fram",
				"miio_app/miio_common/Source/src_lib/wifi_framework_callback.c"
			],
			[
				"ihelbp",
				"miio_app/miio_common/Source/device_app/ihealth_bp.c"
			],
			[
				"flash",
				"view/admin_system/flashops.htm"
			],
			[
				"sys",
				"view/sysauth.htm"
			],
			[
				"sysau",
				"view/sysauth.htm"
			],
			[
				"sysaut",
				"usr/lib/lua/luci/view/sysauth.htm"
			],
			[
				"ihecmd",
				"miio_app/miio_common/Source/device_app/ihealth_mcu_cmd.c"
			],
			[
				"update",
				"miio_app/miio_common/Source/device_app/ihealth_mcufw_update.c"
			],
			[
				"mtfterm.py",
				"bin/wmsdk/tools/bin/test/mtfterm.py"
			],
			[
				"mt",
				"wmsdk/tools/bin/test/mtfterm.py"
			],
			[
				"mtf",
				"wmsdk/tools/bin/test/mtfterm.py"
			],
			[
				"wmcloud_ws",
				"sample_apps/wlan/wm_demo/src/wmcloud_ws.c"
			],
			[
				"mqttclent.c",
				"wmsdk/external/evrythng/mqtt/src/MQTTClient.c"
			],
			[
				"mqtt",
				"wmsdk/external/evrythng/mqtt/src/MQTTPacket.c"
			],
			[
				"lwipots.h",
				"bin/wmsdk/incl/lwip/lwip/lwipopts.h"
			],
			[
				"uv_plat",
				"deps/libtuv/source/linux/uv_platform.h"
			],
			[
				"cmd.c",
				"miio_app/miio_common/Source/device_app/ihealth_mcu_cmd.c"
			],
			[
				"miio_app_ihealth_bp_bpm0.c",
				"miio_app/miio_common/Source/device_app/miIO_app_ihealth_bp_bpm0.c"
			],
			[
				"bpm0",
				"wmsdk/src/boards/ihealth_bp_bpm0.c"
			],
			[
				"mii",
				"miio_app/miio_common/Source/device_app/miIO_app_ihealth_bp_bpm1.c"
			],
			[
				"rpc.c",
				"miio_app/miio_common/Source/src_lib/miio_chip_rpc.c"
			],
			[
				"crc32.c",
				"wmsdk/src/core/util/crc/crc32.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 575.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
